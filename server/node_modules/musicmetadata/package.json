{
  "name": "musicmetadata",
  "description": "Music metadata library for node, using pure Javascript.",
  "version": "0.2.3",
  "author": {
    "name": "Lee Treveil"
  },
  "dependencies": {
    "strtok": "0.1.1"
  },
  "main": "lib",
  "scripts": {
    "test": "tap test/test-*"
  },
  "devDependencies": {
    "tap": "~0.4.1"
  },
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/leetreveil/node-musicmetadata.git"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/leetreveil/node-musicmetadata.png)](http://travis-ci.org/leetreveil/node-musicmetadata)\n\nInstallation\n------------\nInstall via npm:\n\n```\nnpm install musicmetadata\n```\n\n\nSupports\n-----------------\nmp3 (1.1, 2.2, 2.3, 2.4), m4a(mp4), vorbis (ogg, flac)\n\n\nAPI\n-----------------\n```javascript\nvar fs = require('fs');\nvar mm = require('musicmetadata');\n\n//create a new parser from a node ReadStream\nvar parser = new mm(fs.createReadStream('sample.mp3'));\n\n//listen for the metadata event\nparser.on('metadata', function (result) {\n  console.log(result);\n});\n```\n\n\nThis will output the standard music metadata:\n\n```javascript\n{ artist : 'Spor',\n  album : 'Nightlife, Vol 5.',\n  albumartist : [ 'Andy C', 'Spor' ],\n  title : 'Stronger',\n  year : '2010',\n  track : { no : 1, of : 44 },\n  disk : { no : 1, of : 2 },\n  picture : [ { format : 'jpg', data : <Buffer> } ]\n}\n```\n\nIf you just want the artist - listen for the artist event:\n\n```javascript\nparser.on('artist', function (result) {\n  console.log(result);\n});\n```\n\nYou can also listen for custom metadata types that are not part of the standard metadata as defined above. For example if you wanted to read the TLEN frame from a id3v2.x file you can do this:\n\n```javascript\nparser.on('TLEN', function (result) {\n  console.log(result);\n});\n```\n    \nThe ```done``` event will be raised when parsing has finished or an error has occurred. This could be\nused to disconnect from the stream as soon as parsing has finished, saving bandwidth.\n\n```javascript\nparser.on('done', function (err) {\n  if (err) throw err;\n  stream.destroy();\n});\n```\n\nLicence\n-----------------\n\n(The MIT License)\n\nCopyright (c) 2013 Lee Treveil <leetreveil@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/leetreveil/node-musicmetadata/issues"
  },
  "_id": "musicmetadata@0.2.3",
  "_from": "musicmetadata@*"
}
